jar {
	baseName = 'eurekaClient'
	version = '0.0.1-SNAPSHOT'
}

dependencies {
	//compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.cloud:spring-cloud-starter-config')
	compile('org.springframework.cloud:spring-cloud-starter-eureka')
	compile('org.springframework.cloud:spring-cloud-starter-hystrix')
	compile('org.springframework.cloud:spring-cloud-starter-zipkin')
	compile('org.springframework.cloud:spring-cloud-sleuth-zipkin-stream')
	
	//compile("io.zipkin:zipkin-ui:1.39.0") 
    
	
	
	compile('org.springframework.cloud:spring-cloud-starter-zuul')
	compile('org.springframework.cloud:spring-cloud-starter-stream-rabbit')
	compile('org.springframework.boot:spring-boot-starter-hateoas')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.boot:spring-boot-devtools')
	compile 'org.springframework.cloud:spring-cloud-starter-sleuth'
	compile('org.projectlombok:lombok')
	
	
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('io.zipkin.java:zipkin-autoconfigure-ui')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}



bootRun {
    jvmArgs = ["-Xdebug", "-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=10003","-Xms256m","-Xmx256m"]
    jvmArgs = ["-Dspring.profiles.active=dev"]
    //jvmArgs = ['-Dserver.port=9001']
    addResources = true
    if ( project.hasProperty('jvmArgs') ) {
        jvmArgs project.jvmArgs.split('\\s+')
    }
    
}

